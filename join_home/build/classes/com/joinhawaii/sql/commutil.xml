<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="commutil">
 
  <select id="select_hotel_list" resultType="map">
            select b.code_name		as option_group
                 , a.hotel_id			as code
                 , 'hotel'			as code_gubn
                 , a.hotel_kor_name	as code_name
              from hotel_master a
                 , code_master b
             where a.land_code = b.code
               and b.code_gubn = '001'
               and a.use_yn = 'Y'
             order by b.sort_flag, a.hotel_kor_name
  </select>

  <select id="select_room_list" parameterType="map" resultType="map">
            select room_id			as code
                 , 'room'			as code_gubn
                 , case when room_desc = '' then room_name
                        else concat(room_name, '(' , room_desc, ')') end		as code_name
              from room_master
             where use_yn = 'Y'
               and hotel_id = #{hotel_id}
             order by room_name
  </select>

  <select id="select_enjoy_list" resultType="map">
  		<![CDATA[
            select ifnull(b.code_name,' ')		as option_group
                 , a.enjoy_id		as code
                 , 'enjoy'			as code_gubn
                 , replace(a.enjoy_name,'\'', concat('&',char(35),'39;'))		as code_name
              from enjoy_master a left outer join code_master b on a.enjoy_gubn = b.code and b.code_gubn = '113'
             where a.use_yn = 'Y'
             order by b.sort_flag
                    , a.enjoy_name
		]]>
  </select>

  <select id="select_enjoy_price_list" parameterType="map" resultType="map">
            select price_id		as code
                 , 'price'			as code_gubn
                 , case when trim(price_name) = '' then '기본' else price_name end		as code_name
              from enjoy_price
             where enjoy_id = #{enjoy_id}
             order by price_name
  </select>
  
  <select id="select_car_list" parameterType="map" resultType="map">
            select car_id		as code
                 , 'price'		as code_gubn
                 , car_name		as code_name
              from car_master
             where use_yn = 'Y'
             order by sort_flag, car_name
  </select>

  <select id="select_user_list" parameterType="map" resultType="map">
            select a.user_id
                 , a.user_pw
                 , a.user_name
                 , a.auth_code
                 , a.auth_code 	as user_auth
                 , b.code_name	as auth_name
                 , a.user_info
                 , a.use_yn
                 , a.dept_code
                 , a.init_date
                 , a.init_user
                 , a.up_date
                 , a.up_user
              from user_master a left outer join code_master b on a.auth_code = b.code and b.code_gubn = '009'
             where 1=1
             <if test="user_id != null">
              and user_id = #{user_id}
             </if> 
  </select>

  <insert id="insert_user" parameterType="map">
            insert
              into user_master (
                   user_id
                 , user_pw
                 , user_name
                 , auth_code
                 , user_info
                 , use_yn
                 , init_date
                 , init_user
                 , up_date
                 , up_user
            	 )
            values (
                   #{user_id}
                 , #{user_pw}
                 , #{user_name}
                 , #{auth_code}
                 , #{user_info}
                 , #{use_yn}
                 , now()
                 , #{init_user}
                 , now()
                 , #{up_user}
                 )
  </insert>
  
  <update id="update_user" parameterType="map" >
        <![CDATA[
            update user_master
               set user_pw   	= #{user_pw}
                 , user_name 	= #{user_name}
                 , auth_code 	= #{auth_code}
                 , user_info 	= #{user_info}
                 , use_yn    	= #{use_yn}
                 , up_date		= now()
                 , up_user		= #{up_user}
             where user_id 		= #{user_id}
        ]]>
  </update>
 
  <select id="select_code_list" parameterType="map" resultType="map">
            select code
                 , code_gubn
                 , code_name
                 , code_desc
                 , code_info
                 , code_num1
                 , code_num2
                 , sort_flag
                 , use_yn
                 , init_date
                 , init_user
                 , up_date
                 , up_user
              from code_master
             where use_yn 		= 'Y'
               and code_gubn 	= #{code_gubn}
			<if test="code != null">
               and code			= #{code}
			</if>
			<if test="code_name != null">
               and code_name 	like CONCAT('%', #{code_name}, '%')
            </if>  
             order by sort_flag, code
  </select>

  <delete id="delete_all_code" parameterType="map">
            delete
              from code_master
             where code_gubn	= #{code_gubn}
  </delete>

  <insert id="insert_code" parameterType="map">
            insert
              into code_master (
                   code
                 , code_gubn
                 , code_name
                 , code_desc
                 , code_info
                 , code_num1
                 , code_num2
                 , sort_flag
                 , use_yn
                 , init_date
                 , init_user
                 , up_date
                 , up_user
            	 )
            values (
                   #{code}
                 , #{code_gubn}
                 , #{code_name}
                 , #{code_desc}
                 , #{code_info}
                 , case when #{code_num1} = '' then 0 else #{code_num1} end
                 , case when #{code_num2} = '' then 0 else #{code_num2} end
                 , #{sort_flag}
                 , #{use_yn}
                 , now()
                 , #{init_user}
                 , now()
                 , #{up_user}
                 )
  </insert>

  <update id="update_code" parameterType="map">
            update code_master
               set code_name	= #{code_name}
                 , code_desc	= #{code_desc}
                 , code_info	= #{code_info}
                 , code_num1	= #{code_num1}
                 , code_num2	= #{code_num2}
                 , sort_flag	= #{sort_flag}
                 , use_yn		= #{use_yn}
                 , up_date		= now()
                 , up_user		= #{up_user}
             where code 		= #{code}
               and code_gubn	= #{code_gubn}
  </update>

  <delete id="delete_code" parameterType="map">
            delete
              from code_master
             where code 		= #{code}
               and code_gubn	= #{code_gubn}
  </delete>

  <select id="select_next_day" parameterType="map" resultType="map">
            select date_format(date_add(cast(#{from_date} as date), interval #{cnt} day), '%Y%m%d') as to_date
  </select>

  <select id="select_join_list" parameterType="map" resultType="map">
            select a.join_id
				 , a.company_name
				 , a.author_name
				 , a.tel_no
				 , a.fax_no
				 , a.email
				 , a.content
				 , a.reply
				 , a.use_yn
				 , date_format(a.init_date,'%Y.%m.%d %h:%i') 	as init_date
				 , a.init_user
				 , a.up_date
				 , a.up_user
              from join_master a
             where 1=1
            <if test="join_id != null">
              and a.join_id 	= #{join_id}
            </if>
              order by init_date desc
  </select>

  <insert id="insert_join" parameterType="map">
            insert
              into join_master (
                   join_id
                 , company_name
                 , author_name
                 , tel_no
                 , fax_no
                 , email
                 , content
                 , use_yn
                 , init_date
                 , init_user
                 , up_date
                 , up_user
            	 )
            values (
                   #{join_id}
                 , #{company_name}
                 , #{author_name}
                 , #{tel_no}
                 , #{fax_no}
                 , #{email}
                 , #{content}
                 , #{use_yn}
                 , now()
                 , #{init_user}
                 , now()
                 , #{up_user}
                 )
  </insert>

  <update id="update_join" parameterType="map">
            update join_master
               set up_date		= now()
                 , up_user		= #{up_user}
               <if test="company_nam != null">
                 , company_name = #{company_nam}
               </if>
               <if test="author_name != null">
                 , author_name  = #{author_name}
               </if>
               <if test="tel_no != null">
                 , tel_no       = #{tel_no}  
               </if>
               <if test="fax_no != null">
                 , fax_no       = #{fax_no}
               </if>
               <if test="email != null">
                 , email        = #{email}
               </if>
               <if test="content != null">
                 , content      = #{content}
               </if>
               <if test="reply != null">
                 , reply		= #{reply}
               </if>
               <if test="use_yn != null">
                 , use_yn       = #{use_yn}
               </if>
             where join_id    	= #{join_id}
  </update>

  <delete id="delete_join" parameterType="map">
            delete
              from join_master
             where join_id    	= #{join_id}
  </delete>

<!--
  <select_send_seq>
            select ifnull(max(send_seq),0)+1		as send_seq
              from email_history
  </select_send_seq>

  <select_email_history>
        <![CDATA[
            select email
                 , send_seq
                 , subject
                 , content
                 , recv_yn
                 , date_format(recv_date,'%Y-%m-%d %h:%i:%s')	as recv_date
                 , date_format(init_date,'%Y-%m-%d %h:%i:%s')	as init_date
                 , init_user
              from email_history a
             where 1=1
              [and a.send_seq 	= #send_seq#]
              [and a.init_date  like #send_date# '%']
              [and a.email		like '%' #email# '%']
             order by init_date desc
        ]]>
    </sql>
  </select_email_history>

  <insert_email_history>
    <desc>  </desc>
    <sql>
        <![CDATA[
            insert
              into email_history (
                   email
                 , send_seq
                 , subject
                 , content
                 , init_date
                 , init_user
            	 )
            values (
                   #email#
                 , #send_seq#
                 , #subject#
                 , #content#
                 , date_format(now(),'%Y%m%d%h%i%s')
                 , #init_user#
                 )
        ]]>
    </sql>
  </insert_email_history>

  <update_email_history>
    <desc>  </desc>
    <sql>
        <![CDATA[
            update email_history
               set recv_yn		= 'Y'
                 , recv_date	= date_format(now(),'%Y%m%d%h%i%s')
             where send_seq		= #send_seq#
               and recv_yn		= 'N'
        ]]>
    </sql>
  </update_email_history>

  <delete_auth>
    <desc>  </desc>
    <sql>
        <![CDATA[
            delete
              from menu_auth
             where auth_code   	= #auth_code#
        ]]>
    </sql>
  </delete_auth>

  <insert_auth>
    <desc>  </desc>
    <sql>
        <![CDATA[
            insert
              into menu_auth (
                   menu_id
                 , auth_code
                 , select_yn
                 , save_yn
                 , init_date
                 , init_user
            	 )
            values (
                   #menu_id#
                 , #auth_code#
                 , #select_yn#
                 , #save_yn#
                 , date_format(now(),'%Y%m%d%h%i%s')
                 , #init_user#
                 )
        ]]>
    </sql>
  </insert_auth>

  <select_page_list>
    <desc>  </desc>
    <sql>
        <![CDATA[
            select page_id
                 , page_title
                 , page_content
                 , date_format(init_date,'%Y-%m-%d')	as init_date
              from page_master a
             where 1=1
              [and a.page_id 	= #page_id#]
        ]]>
    </sql>
  </select_page_list>

  <insert_page>
    <desc>  </desc>
    <sql>
        <![CDATA[
            insert
              into page_master (
                   page_title
                 , page_content
                 , init_date
                 , init_user
            	 )
            values (
                   #page_title#
                 , #page_content#
                 , now()
                 , #init_user#
                 )
        ]]>
    </sql>
  </insert_page>

  <update_page>
    <desc>  </desc>
    <sql>
        <![CDATA[
            update page_master
               set page_title		= #page_title#
                 , page_content		= #page_content#
                 , up_date			= now()
                 , up_user			= #up_user#
             where page_id			= #page_id#
        ]]>
    </sql>
  </update_page>
 -->
</mapper>