<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
	<select id="select_user_list" parameterType="map" resultType="map">
		select a.user_id, a.user_pw, a.user_name, a.auth_code, a.auth_code as user_auth
			, case when a.auth_code = 'SU' then '최상위관리자' else '일반관리자' end as auth_name, a.user_info
			, a.use_yn, a.regist_datetime, a.regist_user, a.change_datetime, a.change_user
		  from tb_join_user a
		 where 1=1
		<if test="user_id != null and user_id != ''">
		   and a.user_id = #{user_id}
		</if>
		<if test="use_yn != null and use_yn !=''">
		   and a.use_yn = #{use_yn}
		</if>
	</select>
	
	<insert id="insert_user" parameterType="map">
		insert into user_master(user_id, user_pw, user_name, auth_code, user_info, use_yn, init_date, init_user,
								up_date, up_user) 
			values (#{user_id}, #{user_pw}, #{user_name}, #{auth_code}, #{user_info}, 'Y',  now(), 
					#{init_user}, now(), #{up_user})
	</insert>
	
	<update id="update_user" parameterType="map">
		update user_master
		   set user_pw = #{user_pw}, user_name = #{user_name}, auth_code = #{auth_code}
		       , user_info = #{user_info}, use_yn = #{use_yn}, up_date = now(), up_user = #{init_user}
		 where user_id = #{user_id}
	</update>
	
	<delete id="delete_user" parameterType="map">
		delete from user_master where user_id = #{user_id}
	</delete>
	
	<select id="select_req_list" parameterType="map" resultType="map">
			select a.req_id, a.req_dt, d.mail_addr , a.customer_name, a.phone_no
				 , a.start_dt, a.adult_count, a.child_count, a.baby_count
				 , a.est_amt, a.req_info, a.prod_id, c.prod_name
				 , a.res_info, a.req_status
				 , b.code_name	as req_status_name
				 , a.req_date, a.init_date
				 , a.init_user, a.up_date
				 , a.up_user, a.travel_priod
     		  from req_master a left outer join code_master b on b.code = a.req_status and b.code_gubn = '120'
     		                    left outer join member_master d on a.init_user = d.usr_id 
     		  		, yeosi_prod_master c
     		 where a.del_yn = 'N'
     		   <!-- and a.init_user = d.usr_id -->
     		   and a.prod_id = c.prod_id
     		 <if test="req_id != null and req_id != ''">
     		  and a.req_id = #{req_id}
     		 </if>
     		 <if test="req_status != null and req_status != ''">
     		  and a.req_status = #{req_status}
     		 </if>
     		 <if test="req_dt != null and req_dt != ''">
     		  and a.req_dt 	= replace(#{req_dt},'.','')
     		 </if>
     		 <if test="start_dt_from != null and start_dt_from != '' 
     		 			and start_dt_to != null and start_dt_to != '' "> 
     		  and a.start_dt between replace(#{start_dt_from},'.','') and replace(#{start_dt_to},'.','')
     		 </if>
     		 <if test="customer_name != null and customer_name != ''">
     		  and a.customer_name like CONCAT('%', #{customer_name}, '%')
     		 </if>
     		 <if test="email_addr != null and email_addr != ''">
     		  and d.mail_addr like CONCAT('%', #{email_addr}, '%')
     		 </if>
     		 <if test="phone_no != null and phone_no != ''">
     		  and a.phone_no like CONCAT('%', #{phone_no}, '%')
     		 </if>	     		 
     		 order by a.req_id desc
     		 <if test="start_num != null and start_num != '' 
     		 			and end_num != null and end_num != '' "> 
     		 limit #{start_num}, #{end_num}
     		 </if>  		 	
	</select>
	
	<select id="select_req_total" parameterType="map" resultType="int">
			select count(1)
     		  from req_master a left outer join member_master d on a.init_user = d.usr_id
     		    , yeosi_prod_master c 
     		 where a.del_yn = 'N'
     		   <!-- and a.init_user = d.usr_id  -->
     		   and a.prod_id = c.prod_id     		 
     		 <if test="req_id != null and req_id != ''">
     		  and a.req_id = #{req_id}
     		 </if>
     		 <if test="req_status != null and req_status != ''">
     		  and a.req_status = #{req_status}
     		 </if>
     		 <if test="req_dt != null and req_dt != ''">
     		  and a.req_dt 	= replace(#{req_dt},'.','')
     		 </if>
     		 <if test="start_dt_from != null and start_dt_from != '' 
     		 			and start_dt_to != null and start_dt_to != '' "> 
     		  and a.start_dt between replace(#{start_dt_from},'.','') and replace(#{start_dt_to},'.','')
     		 </if>
     		 <if test="customer_name != null and customer_name != ''">
     		  and a.customer_name like CONCAT('%', #{customer_name}, '%')
     		 </if>
     		 <if test="email_addr != null and email_addr != ''">
     		  and d.mail_addr like CONCAT('%', #{email_addr}, '%')
     		 </if>
     		 <if test="phone_no != null and phone_no != ''">
     		  and a.phone_no like CONCAT('%', #{phone_no}, '%')
     		 </if>
	</select>
	
	<update id="update_req_status" parameterType="map">
			update req_master
			   set req_status = #{req_status}
			 where req_id = #{req_id}
	</update>
	
	<select id="select_req_info" parameterType="map" resultType="map">
				select a.req_id
					 , a.req_dt
					 , d.mail_addr
					 , a.customer_name
					 , a.phone_no, d.birth_dt, d.gender
					 , a.phone_no as tel_no
					 , a.travel_priod
					 , a.start_dt
					 , a.end_dt
					 , a.adult_count
					 , a.child_count
					 , a.baby_count
					 , a.est_amt
					 , a.req_info
					 , a.res_info
					 , a.req_status
					 , b.code_name	as req_status_name
					 , a.req_date
					 , a.init_date
					 , a.init_user
					 , a.up_date
					 , a.up_user
					 , a.prod_id, c.prod_name
	     		  from req_master a left outer join code_master b on b.code = a.req_status and b.code_gubn = '120'
	     		  				    left outer join member_master d on a.init_user = d.usr_id
	     		       , yeosi_prod_master c
	     		 where a.req_id	= #{req_id}
	     		   and a.prod_id = c.prod_id
 
	</select>
	<select id="select_est_list" parameterType="map" resultType="map">
		select a.req_id
		     , a.est_no
			 , a.est_state
			 , b.code_name as est_state_name
			 , a.title
			 , a.travel_start_dt
		     , date_format(a.up_date,'%Y-%m-%d') as up_date
		     , a.up_user
		  from est_master a left outer join code_master b on b.code_gubn = '109' and a.est_state = b.code
		 where req_id		= #{req_id}
		   and est_type		= #{est_type}
		 order by est_no desc
	</select>
	
	<select id="select_est_info" parameterType="map" resultType="map">
			select a.est_no
				 , a.req_id
				 , a.parent_est_no
				 , a.est_type
				 , a.est_state
				 , a.est_gubn
				 , a.est_remarks
				 , date_format(a.issue_dt,'%Y.%m.%d') as issue_dt
				 , a.issue_user
				 , a.confirm_no
				 , a.customer_name
				 , a.title
				 , date_format(a.travel_start_dt,'%Y.%m.%d') as travel_start_dt
				 , date_format(a.travel_end_dt,'%Y.%m.%d') as travel_end_dt
				 , a.prod_id, b.prod_name, a.prod_remarks
				 , a.payment_stat, c.code_name payment_stat_name
				 , a.reserv_stat, d.code_name reserv_stat_name
				 , a.total_won
				 , a.init_date
				 , a.init_user
				 , a.up_date
				 , a.up_user
			  from est_master a left outer join code_master c on c.code_gubn = '131' and a.payment_stat = c.code 
			  					left outer join code_master d on d.code_gubn = '130' and a.reserv_stat = d.code
			  	, yeosi_prod_master b
			 where a.prod_id = b.prod_id
			   and a.est_no = #{est_no}
  </select>
  
  <select id="select_customer_list" parameterType="map" resultType="map">
			select a.*,	b.code_name as sex_name, c.code_name as isadult_name
				, date_format(a.birth_dt, '%Y.%m.%d') as birth_df
			  from est_customer a left outer join code_master b on b.code_gubn = '102' and a.sex = b.code 
			  					  left outer join code_master c on c.code_gubn = '128' and a.isadult = c.code
			 where a.est_no = #{est_no}
			 order by a.est_seq
  </select> 

  <select id="select_wedding_info" parameterType="map" resultType="map">
  			select a.*, b.prod_kor_nm as wedd_name
  			  from est_wedding a, product_master b
  			 where a.est_no = #{est_no}
  			   and a.prod_cd = b.prod_cd
  </select>

  <select id="select_wedding_sub_list" parameterType="map" resultType="map">
  			select a.*, b.prod_kor_nm as add_wedd_name
  			  from est_wedding_sub a, product_master b
  			 where a.est_no = #{est_no}
  			   and a.prod_cd = b.prod_cd
  			 order by est_seq
  </select>

  <select id="select_air_list" parameterType="map" resultType="map">
			select a.*
				  , b.code_name corp_name
				  , c.code_name leave_at_name
				  , d.code_name arrival_at_name
				  , e.code_name reserv_stat_name
			      , date_format(a.leave_dt, '%Y.%m.%d') as leave_df
			      , date_format(a.arrival_dt, '%Y.%m.%d') as arrival_df
			      , date_format(a.ticket_dt, '%Y.%m.%d') as ticket_df
			  from est_air a left outer join code_master b on b.code_gubn = '005' and a.corp = b.code 
			  				 left outer join code_master c on c.code_gubn = '010' and a.leave_at = c.code
							 left outer join code_master d on d.code_gubn = '010' and a.arrival_at = d.code 
			  				 left outer join code_master e on e.code_gubn = '103' and a.reserv_stat = e.code			  					  
			 where a.est_no = #{est_no}
			 order by a.est_seq
  </select>  
  
  <select id="select_hotel_list" parameterType="map" resultType="map">
			select a.*
			      , b.hotel_eng_name, b.hotel_kor_name
			      , date_format(a.start_dt, '%Y.%m.%d') as start_df
			      , date_format(a.end_dt, '%Y.%m.%d') as end_df
			      , c.code_name room_type_name
			      , d.code_name bed_type_name
			      , e.code_name reserv_stat_name
			  from est_hotel a left outer join code_master c on c.code_gubn = '129' and a.room_type = c.code
			                   left outer join code_master d on d.code_gubn = '104' and a.bed_type = d.code 
			                   left outer join code_master e on e.code_gubn = '130' and a.reserv_stat = e.code 
			      , hotel_master b
			 where a.est_no		= #{est_no}
			   and a.hotel_id = b.hotel_id
		<if test="est_seq != null">
			   and a.est_seq		= #{est_seq}
		</if>
			 order by a.est_seq
  </select> 
  
  <select id="select_enjoy_list" parameterType="map" resultType="map">
			select a.*
				 , b.enjoy_name
				 , date_format(a.enjoy_dt, '%Y.%m.%d') as enjoy_df
				 , c.code_name pickup_name
				 , e.code_name reserv_stat_name
			  from est_enjoy a left outer join code_master c on c.code_gubn = '126' and a.pickup = c.code
			                   left outer join code_master e on e.code_gubn = '130' and a.reserv_stat = e.code 
			     , enjoy_master b
			 where a.est_no	= #{est_no}
			   and a.enjoy_id = b.enjoy_id
		<if test="est_seq != null">
			   and a.est_seq = #{est_seq}
		</if>
			 order by a.est_seq
  </select> 

  <select id="select_car_list" parameterType="map" resultType="map">
			select a.*
				 , b.car_name
				 , date_format(a.start_dt, '%Y.%m.%d') as start_df
			     , date_format(a.end_dt, '%Y.%m.%d') as end_df
			     , c.code_name pickup_name
				 , e.code_name reserv_stat_name
			  from est_car a left outer join code_master c on c.code_gubn = '110' and a.pickup = c.code
			                 left outer join code_master e on e.code_gubn = '130' and a.reserv_stat = e.code 
			     , car_master b
			 where a.est_no		= #{est_no}
			   and a.car_id = b.car_id
		<if test="est_seq != null">
			   and a.est_seq		= #{est_seq}
		</if>
			 order by a.est_seq
  </select>

  <select id="select_insure_list" parameterType="map" resultType="map">
			select c.code_name insure_name, a.*
			     , date_format(a.start_dt, '%Y.%m.%d') as start_df
			     , date_format(a.end_dt, '%Y.%m.%d') as end_df
			     , e.code_name reserv_stat_name
			  from est_insure a left outer join code_master c on c.code_gubn = '012' and a.insure_id = c.code
			                    left outer join code_master e on e.code_gubn = '130' and a.reserv_stat = e.code 
			 where a.est_no		= #{est_no}
		<if test="est_seq != null">
			  and a.est_seq		= #{est_seq}
		</if>
			 order by a.est_seq
  </select>
  
  <select id="select_req_id" resultType="int">
			select ifnull(max(a.req_id)+1,1) as req_id
              from req_master a
  </select>

  <select id="select_est_no" resultType="string" parameterType="map">
  	<!-- 
			select ifnull(max(a.est_no)+1,1) as est_no
              from est_master a
   	-->
   			select est_no from est_master where est_id = #{est_id}
  </select>
  
  <select id="select_est_cnt" resultType="int" parameterType="map">
  			select count(1) + 1 from est_master where req_id = #{req_id}
  </select>

  <insert id="insert_est_master" parameterType="map">
			insert
			  into est_master (
				  req_id
				 , parent_est_no
				 , est_type
				 , est_state
				 , est_gubn
				 , est_remarks
				 , issue_dt
				 , issue_user
				 , confirm_no
				 , customer_name
				 , title
				 , travel_start_dt
				 , travel_end_dt
				 , total_won
				 , prod_id, prod_remarks
				 , payment_stat, reserv_stat
				 , init_date
				 , init_user
				 , up_date
				 , up_user
				 )
		    values (
				  #{req_id}
				 , #{parent_est_no}
				 , #{est_type}
				 , case when #{est_state} = '' then '1' else #{est_state} end
				 , #{est_gubn}
				 , #{est_remarks}
				 <!-- , replace(#{issue_dt},'.','') -->
				 , date_format(now(), '%Y%m%d')
				 , #{issue_user}
				 , #{confirm_no}
				 , #{customer_name}
				 , #{title}
				 , replace(#{travel_start_dt},'.','')
				 , replace(#{travel_end_dt},'.','')
				 , case when #{total_won} = '' then 0 else #{total_won} end
				 , #{prod_id}, #{prod_remarks}
				 , #{payment_stat}, #{reserv_stat}
	             , now()
	             , #{init_user}
	             , now()
	             , #{up_user}
	             )
		<selectKey resultType="int" keyProperty="est_id" order="AFTER">
			select last_insert_id()
		</selectKey>
  </insert>

  <update id="update_est_no" parameterType="map">
		update est_master
			set est_no = lpad(est_id,12,'0')
		  where est_id = #{est_id}
  </update>
	
  <insert id="insert_est_customer" parameterType="map">
			insert
			  into est_customer (
			       est_no
				 , est_seq
				 , customer_name
				 , customer_eng_name
				 , sex
				 , tel_no
				 , isadult
				 , e_passport
				 , esta
				 , relation
				 , email_addr
				 , birth_dt
				 , remarks
				 , init_date
				 , init_user
				 , up_date
				 , up_user
				 )
		    values (
		    	   #{est_no}
				 , #{est_seq}
				 , #{customer_name}
				 , #{customer_eng_name}
				 , #{sex}
				 , #{tel_no}
				 , #{isadult}
				 , #{e_passport}
				 , #{esta}
				 , #{relation}
				 , #{email_addr}
				 , replace(#{birth_dt},'.','')
				 , #{remarks}
	             , now()
	             , #{init_user}
	             , now()
	             , #{up_user}
	             )
  </insert>
  
  <insert id="insert_est_air" parameterType="map">
			insert
			  into est_air (
			       est_no
				 , est_seq
				 , item
				 , corp
				 , leave_at
				 , arrival_at
				 , leave_dt
				 , leave_tm
				 , arrival_dt
				 , arrival_tm
				 , take_tm
				 , reserv_stat
				 , ticket_dt
				 , init_date
				 , init_user
				 , up_date
				 , up_user
				 )
		    values (
		    	   #{est_no}
				 , #{est_seq}
				 , #{item}
				 , #{corp}
				 , #{leave_at}
				 , #{arrival_at}
				 , replace(#{leave_dt},'.','')
				 , #{leave_tm}
				 , replace(#{arrival_dt},'.','')
				 , #{arrival_tm}
				 , #{take_tm}
				 , #{reserv_stat}
				 , replace(#{ticket_dt},'.','')
	             , now()
	             , #{init_user}
	             , now()
	             , #{up_user}
	             )
  </insert>

  <insert id="insert_est_hotel" parameterType="map">
			insert
			  into est_hotel (
			       est_no
				 , est_seq
				 , item
				 , hotel_id
				 , start_dt
				 , end_dt
				 , room_type
				 , bed_type
				 , reserv_stat
				 , customer
				 , promotion
				 , add_person_count
				 , room_count
				 , init_date
				 , init_user
				 , up_date
				 , up_user
				 )
		    values (
		    	   #{est_no}
				 , #{est_seq}
				 , #{item}
				 , #{hotel_id}
				 , replace(#{start_dt},'.','')
				 , replace(#{end_dt},'.','')
				 , #{room_type}
				 , #{bed_type}
				 , #{reserv_stat}
				 , #{customer}
				 , #{promotion}
				 , case when #{add_person_count} = '' then 0 else #{add_person_count} end
				 , case when #{room_count} = '' then 0 else #{room_count} end
	             , now()
	             , #{init_user}
	             , now()
	             , #{up_user}
	             )
  </insert>

  <insert id="insert_est_enjoy" parameterType="map">
			insert
			  into est_enjoy (
			       est_no
				 , est_seq
				 , item
				 , enjoy_id
				 , enjoy_dt
				 , persn_cnt
				 , pickup
				 , pickup_tm
				 , reserv_stat
				 , customer
				 , detail
				 , init_date
				 , init_user
				 , up_date
				 , up_user
				 )
		    values (
		    	   #{est_no}
				 , #{est_seq}
				 , #{item}
				 , #{enjoy_id}
				 , replace(#{enjoy_dt},'.','')
				 , case when #{persn_cnt} = '' then 0 else #{persn_cnt} end
				 , #{pickup}
				 , #{pickup_tm}
				 , #{reserv_stat}
				 , #{customer}
				 , #{detail}
	             , now()
	             , #{init_user}
	             , now()
	             , #{up_user}
	             )
  </insert>

  <insert id="insert_est_car" parameterType="map">
			insert
			  into est_car (
			       est_no
				 , est_seq
				 , item
				 , car_id
				 , start_dt
				 , end_dt
				 , rent_day
				 , pickup
				 , pickup_tm
				 , reserv_stat
				 , driver
				 , include
				 , init_date
				 , init_user
				 , up_date
				 , up_user
				 )
		    values (
		    	   #{est_no}
				 , #{est_seq}
				 , #{item}
				 , #{car_id}
				 , replace(#{start_dt},'.','')
				 , replace(#{end_dt},'.','')
				 , case when #{rent_day} = '' then 0 else #{rent_day} end
				 , #{pickup}
				 , #{pickup_tm}
				 , #{reserv_stat}
				 , #{driver}
				 , #{include}
	             , now()
	             , #{init_user}
	             , now()
	             , #{up_user}
	             )
  </insert>

  <insert id="insert_est_insure" parameterType="map">
			insert
			  into est_insure (
			       est_no
				 , est_seq
				 , insure_id
				 , persn_cnt
				 , start_dt
				 , end_dt
				 , reserv_stat
				 , customer
				 , detail
				 , init_date
				 , init_user
				 , up_date
				 , up_user
				 )
		    values (
		    	   #{est_no}
				 , #{est_seq}
				 , #{insure_id}
				 , case when #{persn_cnt} = '' then 0 else #{persn_cnt} end
				 , replace(#{start_dt},'.','')
				 , replace(#{end_dt},'.','')
				 , #{reserv_stat}
				 , #{customer}
				 , #{detail}
	             , now()
	             , #{init_user}
	             , now()
	             , #{up_user}
	             )
  	</insert>
  	
  <update id="update_est_master" parameterType="map">
			update est_master
               set est_type				= #{est_type}
				 , est_gubn				= #{est_gubn}
				 , est_remarks			= #{est_remarks}
				 , issue_dt				= replace(#{issue_dt},'.','')
				 , issue_user			= #{issue_user}
				 , confirm_no			= #{confirm_no}
				 , customer_name		= #{customer_name}
				 , title				= #{title}
				 , prod_id				= #{prod_id}
				 , prod_remarks			= #{prod_remarks}
				 , payment_stat			= #{payment_stat}
				 , reserv_stat			= #{reserv_stat}
				 , travel_start_dt		= replace(#{travel_start_dt},'.','')
				 , travel_end_dt		= replace(#{travel_end_dt},'.','')
				 , total_won			= case when #{total_won} = '' then 0 else #{total_won} end
				 , up_date				= now()
				 , up_user				= #{up_user}
  			 where est_no				= #{est_no}
  </update>

  <update id="update_est_wedding" parameterType="map">
			update est_wedding
			   set prod_cd		= #{prod_cd}
			     , bonus		= #{bonus}
				 , up_date		= now()
				 , up_user		= #{up_user}
			 where est_no				= #{est_no}
  </update>
  
  <insert id="insert_est_guide" parameterType="map">
			insert
			  into est_guide
			select #{est_no}
				 , code
				 , 0
				 , code_name
				 , null
				 , null
				 , now()
				 , #{init_user}
				 , now()
				 , #{up_user}
			  from code_master
			 where code_gubn = '127'
			   and use_yn = 'Y'
  </insert>

  <update id="update_est_state" parameterType="map">
			update est_master
               set est_state			= #{est_state}
                 , title				= #{title}
				 , up_date				= now()
				 , up_user				= #{up_user}
  			 where est_no				= #{est_no}
  </update>

  <delete id="delete_est_master" parameterType="map">
			delete
			  from est_master
  			 where est_no				= #{est_no}
  </delete>

  <delete id="delete_est_wedding" parameterType="map">
			delete
			  from est_wedding
  			 where est_no				= #{est_no}
  </delete>
  
  <delete id="delete_est_wedding_sub" parameterType="map">
			delete
			  from est_wedding_sub
  			 where est_no				= #{est_no}
  </delete>
  
  <delete id="delete_est_customer_all" parameterType="map">
        	delete
        	  from est_customer
        	 where est_no = #{est_no}
  </delete>

  <delete id="delete_est_air_all" parameterType="map">
        	delete
        	  from est_air
        	 where est_no = #{est_no}
  </delete>
<!-- 
  <delete id="delete_est_fly_all" parameterType="map">
        	delete
        	  from est_fly
        	 where est_no = #{est_no}
  </delete>
 -->
  <delete id="delete_est_hotel_all" parameterType="map">
        	delete
        	  from est_hotel
        	 where est_no = #{est_no}
  </delete>

  <delete id="delete_est_enjoy_all" parameterType="map">
        	delete
        	  from est_enjoy
        	 where est_no = #{est_no}
  </delete>

  <delete id="delete_est_car_all" parameterType="map">
        	delete
        	  from est_car
        	 where est_no = #{est_no}
  </delete>

  <delete id="delete_est_insure_all" parameterType="map">
        	delete
        	  from est_insure
        	 where est_no = #{est_no}
  </delete>


  <update id="issue_est_master" parameterType="map">
        	update est_master
        	   set est_state = #{est_state}
        	     , issue_dt = case when #{est_state} = '3' then date_format(now(),'%Y%m%d') else '' end
        	 where est_no = #{est_no}
  </update>
<!--   
  <update id="issue_est" parameterType="map">
        	update est_$gubn$
        	   set est_state = case when #est_state# = '3' then '3'
        	    					when #gubn# = 'guide' then ''
        	                        else #est_state# end
        	     , issue_date = case when #est_state# = '3' then now() else null end
        	     , issue_user = #up_user#
        	 where est_no = #est_no#
        	  and est_seq = #est_seq#
  </update>
 -->

  <select id="select_sales_list" parameterType="map" resultType="map">
			select a.est_no
			     , b.est_seq
			     , a.customer_name
			     , a.travel_start_dt
			     , a.travel_end_dt
			     , 'hotel' 			as product_gubn
			     , '호텔    '		as product_gubn_name
			     , c.hotel_eng_name as product_name
			     , b.stay_day		as product_qty
			     , b.cost_usd
			     , b.price_usd
			     , b.total_usd
			     , b.sales_desc
			     , b.total_usd - b.stay_day * b.cost_usd as profit_usd
			     , b.dept_code
     		  from est_master a
     		     , est_hotel b left outer join hotel_master c on b.hotel_id = c.hotel_id
     		 where a.est_no = b.est_no
     		   and a.est_state = '3'
     		   and a.travel_start_dt between replace(#{travel_start_dt},'.','') and replace(#{travel_end_dt},'.','')
     	<if test="customer_name != null">
     		   and a.customer_name like concat('%', #{customer_name}, '%')
     	</if>
     		 union all
     		select a.est_no
			     , b.est_seq
			     , a.customer_name
			     , a.travel_start_dt
			     , a.travel_end_dt
			     , 'fly'
			     , '주내선'
			     , c.code_name
			     , b.person_count
			     , b.cost_usd
			     , b.price_usd
			     , b.total_usd
			     , b.sales_desc
			     , b.total_usd - b.person_count * b.cost_usd
			     , b.dept_code
     		  from est_master a
     		     , est_fly b left outer join code_master c on b.air_code = c.code and c.code_gubn = '005'
     		 where a.est_no = b.est_no
     		   and a.est_state = '3'
     		   and a.travel_start_dt between replace(#{travel_start_dt},'.','') and replace(#{travel_end_dt},'.','')
     	<if test="customer_name != null">	 
     		  [and a.customer_name like concat('%', #{customer_name}, '%')
     	</if>
     		 union all
     		select a.est_no
			     , b.est_seq
			     , a.customer_name
			     , a.travel_start_dt
			     , a.travel_end_dt
			     , 'enjoy'
			     , '선택관광'
			     , c.enjoy_name
			     , b.person_count
			     , b.cost_usd
			     , b.price_usd
			     , b.total_usd
			     , b.sales_desc
			     , b.total_usd - b.person_count * b.cost_usd
			     , b.dept_code
     		  from est_master a
     		     , est_enjoy b left outer join enjoy_master c on b.enjoy_id = c.enjoy_id
     		 where a.est_no = b.est_no
     		   and a.est_state = '3'
     		   and a.travel_start_dt between replace(#{travel_start_dt},'.','') and replace(#{travel_end_dt},'.','')
     	<if test="customer_name != null">	
     		   and a.customer_name like concat('%', #{customer_name}, '%') 
     	</if>
     		 union all
     		select a.est_no
			     , b.est_seq
			     , a.customer_name
			     , a.travel_start_dt
			     , a.travel_end_dt
			     , 'car'
			     , '렌터카'
			     , c.code_name
			     , b.rent_day
			     , b.cost_usd
			     , b.price_usd
			     , b.total_usd
			     , b.sales_desc
			     , b.total_usd - b.rent_day * b.cost_usd
			     , b.dept_code
     		  from est_master a
     		     , est_car b left outer join code_master c on b.car_type = c.code and c.code_gubn = '008'
     		 where a.est_no = b.est_no
     		   and a.est_state = '3'
     		   and a.travel_start_dt between replace(#{travel_start_dt},'.','') and replace(#{travel_end_dt},'.','')
     	<if test="customer_name != null">
     		   and a.customer_name like concat('%', #{customer_name}, '%')
     	</if>
     		 union all
     		select a.est_no
			     , b.est_seq
			     , a.customer_name
			     , a.travel_start_dt
			     , a.travel_end_dt
			     , 'insure'
			     , '보험'
			     , b.insure_info
			     , b.person_count
			     , b.cost_usd
			     , b.price_usd
			     , b.total_usd
			     , b.sales_desc
			     , b.total_usd - b.person_count * b.cost_usd
			     , b.dept_code
     		  from est_master a
     		     , est_insure b
     		 where a.est_no = b.est_no
     		   and a.est_state = '3'
     		   and a.travel_start_dt between replace(#{travel_start_dt},'.','') and replace(#{travel_end_dt},'.','')
     	<if test="customer_name != null">	
     		   and a.customer_name like concat('%', #{customer_name}, '%')
     	</if>
     		order by est_no
 	</select>

<!-- 
 	<update id="update_est_cost" parameterType="map">
        	update est_$product_gubn$
        	   set cost_usd = case when #{cost_usd} = '' then 0 else #{cost_usd} end
        	 where est_no = #{est_no}
        	  and est_seq = #{est_seq}
  	</update>
 -->
  	<select id="select_account_list" parameterType="map" resultType="map">
			select a.est_no
			     , a.customer_name
			     , a.travel_start_dt
			     , a.travel_end_dt
			     , b.total_usd_hotel
			     , b.profit_usd_hotel
			     , c.total_usd_fly
			     , c.profit_usd_fly
			     , d.total_usd_enjoy
			     , d.profit_usd_enjoy
			     , e.total_usd_car
			     , e.profit_usd_car
			     , f.total_usd_insure
			     , f.profit_usd_insure
			     , b.total_usd_hotel + c.total_usd_fly + d.total_usd_enjoy + e.total_usd_car + f.total_usd_insure as total_usd
			     , b.profit_usd_hotel + c.profit_usd_fly + d.profit_usd_enjoy + e.profit_usd_car + f.profit_usd_insure as profit_usd
     		  from est_master a left outer join (select est_no
     		                     					  , sum(total_usd) as total_usd_hotel
     		                     					  , sum(total_usd - stay_day * cost_usd) as profit_usd_hotel
     		                     				   from est_hotel
     		                     			<if test="dept_code != null">
     		                     				  where dept_code = #{dept_code}
     		                     			</if>
     		                     				  group by est_no) b on a.est_no = b.est_no
     		                    left outer join (select est_no
     		                     					  , sum(total_usd) as total_usd_fly
     		                     					  , sum(total_usd - person_count * cost_usd) as profit_usd_fly
     		                     				   from est_fly
     		                     			<if test="dept_code != null">
     		                     				  where dept_code = #{dept_code}
     		                     			</if>
     		                     				  group by est_no) c on a.est_no = c.est_no
     		                    left outer join (select est_no
     		                     					  , sum(total_usd) as total_usd_enjoy
     		                     					  , sum(total_usd - person_count * cost_usd) as profit_usd_enjoy
     		                     				   from est_enjoy
     		                     			<if test="dept_code != null">
     		                     				  where dept_code = #{dept_code}
     		                     			</if>
     		                     				  group by est_no) d on a.est_no = d.est_no
     		                    left outer join (select est_no
     		                     					  , sum(total_usd) as total_usd_car
     		                     					  , sum(total_usd - rent_day * cost_usd) as profit_usd_car
     		                     				   from est_car
     		                     			<if test="dept_code != null">
     		                     				  where dept_code = #{dept_code}
     		                     			</if>
     		                     				  group by est_no) e on a.est_no = e.est_no
     		                    left outer join (select est_no
     		                     					  , sum(total_usd) as total_usd_insure
     		                     					  , sum(total_usd - person_count * cost_usd) as profit_usd_insure
     		                     				   from est_insure
     		                     			<if test="dept_code != null">
     		                     				  where dept_code = #{dept_code}
     		                     			</if>
     		                     				  group by est_no) f on a.est_no = f.est_no
     		 where a.est_state = '3'
     		   and a.travel_start_dt between replace(#{travel_start_dt},'.','') and replace(#{travel_end_dt},'.','')
     	<if test="customer_name != null">
     		   and a.customer_name like concat('%', #{customer_name}, '%')
		</if>
     		group by a.est_no
			     , a.customer_name
			     , a.travel_start_dt
			     , a.travel_end_dt
     		order by est_no
 	</select>

	<select id="select_hotel_voucher">
        	select b.hotel_eng_name
        	     , b.addr
        	     , a.start_dt
        	     , a.end_dt
        	     , a.stay_day
        	     , a.room_type
        	     , a.bed_type
        	     , case when a.bfst_yn = 'Y' then 'YES'
        	            else 'NO' end as bfst_yn
        	     , case when a.porterage_usd > 0 then 'YES'
        	            else 'NO' end as porterage_yn
        	     , a.confirm_no
        	     , a.remarks
        	     , date_format(a.issue_date,'%Y.%m.%d') as issue_date
        	     , a.issue_user
        	  from est_hotel a
        	     , hotel_master b
        	 where a.hotel_id = b.hotel_id
        	   and a.est_no = #est_no#
        	   and a.est_seq = #est_seq#
  	</select>
  	
  	<update id="update_voucher_hotel">
        	update est_hotel
        	   set confirm_no = #confirm_no#
        	     , remarks = #remarks#
        	 where est_no = #est_no#
        	   and est_seq = #est_seq#
  	</update>

	<select id="select_car_voucher">
        	select b.code_name as car_type
        	     , a.start_dt
        	     , a.end_dt
        	     , a.car_company
                 , a.pickup_location
                 , a.pickup_date
                 , a.return_location
                 , a.return_date
        	     , a.rent_day
        	     , a.renter_name
        	     , a.gps_code
        	     , a.voucher_no
                 , a.confirm_no
                 , a.memo
        	     , date_format(a.issue_date,'%Y.%m.%d') as issue_date
        	     , a.issue_user
        	  from est_car a left outer join code_master b on a.car_type = b.code and b.code_gubn = '008'
        	 where a.est_no = #est_no#
        	   and a.est_seq = #est_seq#
  	</select>

  	<update id="update_voucher_car">
        	update est_car
        	   set confirm_no = #confirm_no#
        	     , voucher_no = #voucher_no#
        	     , renter_name	 = #renter_name#
        	     , pickup_location = #pickup_location#
        	     , pickup_date = #pickup_date#
        	     , return_location = #return_location#
        	     , return_date = #return_date#
        	     , memo = #memo#
        	 where est_no = #est_no#
        	   and est_seq = #est_seq#
  	</update>

	<select id="select_fly_voucher">
        	select a.confirm_no
        		 , a.transfer_time
        	     , a.from_name
				 , a.from_date
				 , a.from_from_name
				 , a.from_to_name
				 , a.from_depart
				 , a.from_arrive
				 , a.from_from_terminal
				 , a.from_to_terminal
				 , a.from_flight
				 , a.from_duration
				 , a.from_cabin
				 , a.from_meals
				 , a.from_aircraft
				 , a.from_carrier
				 , a.to_name
				 , a.to_date
				 , a.to_from_name
				 , a.to_to_name
				 , a.to_depart
				 , a.to_arrive
				 , a.to_from_terminal
				 , a.to_to_terminal
				 , a.to_flight
				 , a.to_duration
				 , a.to_cabin
				 , a.to_meals
				 , a.to_aircraft
				 , a.to_carrier
				 , a.transfer_name
				 , a.transfer_date
				 , a.transfer_from_name
				 , a.transfer_transfer_name
				 , a.transfer_depart
				 , a.transfer_arrive
				 , a.transfer_from_terminal
				 , a.transfer_transfer_terminal
				 , a.transfer_flight
				 , a.transfer_duration
				 , a.transfer_cabin
				 , a.transfer_meals
				 , a.transfer_aircraft
				 , a.transfer_carrier
        	     , date_format(a.issue_date,'%Y.%m.%d') as issue_date
        	     , a.issue_user
        	  from est_fly a
        	 where a.est_no = #est_no#
        	   and a.est_seq = #est_seq#
  	</select>

  	<update id="update_voucher_fly">
        	update est_fly
        	   set confirm_no 			= #confirm_no#
        	     , from_name			= #from_name#
				 , from_date			= #from_date#
				 , from_from_name		= #from_from_name#
   				 , from_to_name			= #from_to_name#
				 , from_depart          = #from_depart#
				 , from_arrive          = #from_arrive#
				 , from_from_terminal   = #from_from_terminal#
				 , from_to_terminal   	= #from_to_terminal#
				 , from_flight          = #from_flight#
				 , from_duration        = #from_duration#
				 , from_cabin           = #from_cabin#
				 , from_meals           = #from_meals#
				 , from_aircraft        = #from_aircraft#
				 , from_carrier         = #from_carrier#
				 , to_name              = #to_name#
				 , to_date              = #to_date#
				 , to_from_name         = #to_from_name#
				 , to_to_name           = #to_to_name#
				 , to_depart            = #to_depart#
				 , to_arrive            = #to_arrive#
				 , to_from_terminal     = #to_from_terminal#
				 , to_to_terminal       = #to_to_terminal#
				 , to_flight            = #to_flight#
				 , to_duration          = #to_duration#
				 , to_cabin             = #to_cabin#
				 , to_meals             = #to_meals#
				 , to_aircraft          = #to_aircraft#
				 , to_carrier           = #to_carrier#
				 , transfer_name              = #transfer_name#
				 , transfer_date              = #transfer_date#
				 , transfer_from_name         = #transfer_from_name#
				 , transfer_transfer_name     = #transfer_transfer_name#
				 , transfer_depart            = #transfer_depart#
				 , transfer_arrive            = #transfer_arrive#
				 , transfer_from_terminal     = #transfer_from_terminal#
				 , transfer_transfer_terminal = #transfer_transfer_terminal#
				 , transfer_flight            = #transfer_flight#
				 , transfer_duration          = #transfer_duration#
				 , transfer_cabin             = #transfer_cabin#
				 , transfer_meals             = #transfer_meals#
				 , transfer_aircraft          = #transfer_aircraft#
				 , transfer_carrier           = #transfer_carrier#
        	 where est_no = #est_no#
        	   and est_seq = #est_seq#
  	</update>

	<select id="select_fly_seat">
        	select #est_no#		as est_no
                 , #est_seq#	as est_seq
                 , num.num		as seat_seq
                 , a.customer_name
                 , a.from_seat_name
                 , a.transfer_seat_name
                 , a.to_seat_name
              from num left outer join est_fly_seat a on a.seat_seq = num.num
                                                    and a.est_no = #est_no#
                                                    and a.est_seq = #est_seq#
             where num <![CDATA[<=]]> (select person_count from est_fly where est_no = #est_no# and est_seq = #est_seq#)
             order by num.num
  	</select>

  	<delete id="delete_fly_seat">
        	delete
        	  from est_fly_seat
        	 where est_no = #est_no#
        	   and est_seq = #est_seq#
  	</delete>

  	<insert id="insert_fly_seat">
        	insert
        	  into est_fly_seat (
        	       est_no
        	     , est_seq
        	     , seat_seq
        	     , customer_name
        	     , from_seat_name
        	     , transfer_seat_name
        	     , to_seat_name
                 )
            values (
        	       #est_no#
        	     , #est_seq#
        	     , #seat_seq#
        	     , #customer_name#
        	     , #from_seat_name#
        	     , #transfer_seat_name#
        	     , #to_seat_name#
        	     )
  	</insert>


  	<select id="select_enjoy_voucher">
        	select b.enjoy_name
			     , a.activity
        	     , a.voucher_no
        	     , a.vender_name
        	     , a.confirm_no
        	     , a.main_name
        	     , a.pick_daytime
        	     , a.hotel_name
        	     , a.pickup_id
				 , a.remarks
        	     , a.prepare
        	     , a.out_voucher_path
        	     , date_format(a.issue_date,'%Y.%m.%d') as issue_date
        	     , a.issue_user
        	     , b.enjoy_include
        	     , b.voucher_yn
        	  from est_enjoy a left outer join enjoy_master b on a.enjoy_id = b.enjoy_id
        	 where a.est_no = #est_no#
        	   and a.est_seq = #est_seq#
  	</select>

  	<update id="update_voucher_enjoy">
        	update est_enjoy
        	   set activity			= #activity#
			     , voucher_no		= #voucher_no#
        	     , vender_name		= #vender_name#
        	     , confirm_no		= #confirm_no#
        	     , main_name		= #main_name#
        	     , pick_daytime		= #pick_daytime#
        	     , hotel_name		= #hotel_name#
        	     , pickup_id		= #pickup_id#
				 , remarks			= #remarks#
        	     , prepare			= #prepare#
        	     , out_voucher_path	= #out_voucher_path#
        	 where est_no = #est_no#
        	   and est_seq = #est_seq#
  	</update>

	<select id="select_est_voucher">
			select a.est_no
				 , a.req_id
				 , a.parent_est_no
				 , a.est_type
				 , a.est_state
				 , a.est_gubn
				 , a.est_remarks
				 , a.issue_dt
				 , a.issue_user
				 , a.confirm_no
				 , a.customer_name
				 , a.title
				 , b.code_name 			as travel_gubn
				 , c.code_name			as travel_type
				 , a.travel_desc
				 , a.travel_start_dt
				 , a.travel_end_dt
				 , a.island
				 , a.package_deposit_usd
				 , a.total_desc
				 , a.deposit_desc
				 , a.total_usd
				 , a.deposit_usd
				 , a.remain_usd
				 , a.deposit_currency
				 , a.remain_currency
				 , a.total_won
				 , a.deposit_won
				 , a.remain_won
				 , a.agree_yn
				 , a.agree_date
				 , a.agree_user
				 , a.customer_remarks
				 , a.air_remarks
				 , a.fly_remarks
				 , a.hotel_remarks
				 , a.enjoy_remarks
				 , a.car_remarks
				 , a.insure_remarks
				 , a.remarks
				 , a.deposit_card_yn
				 , a.remain_card_yn
				 , a.init_date
				 , a.init_user
				 , a.up_date
				 , a.up_user
			  from est_master a		left outer join code_master b on a.travel_gubn = b.code and b.code_gubn = '100'
			  						left outer join code_master c on a.travel_type = c.code and c.code_gubn = '101'
			 where est_no		= #est_no#
  </select>
</mapper>